
apply plugin: 'java'
apply plugin: 'signing'
apply plugin: 'maven'
apply plugin: 'application'



sourceCompatibility = '1.8'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

//apply from: 'http://gradle-plugins.mihosoft.eu/latest/vlicenseheader.gradle'
//repairHeaders.licenseHeaderText = new File(projectDir,'./license-template.txt')

File buildDir = file(".");
Properties props = new Properties()
props.load(new FileInputStream(buildDir.getAbsolutePath()+"/src/main/resources/com/neuronrobotics/javacad/build.properties"))


task sourcesJar(type: Jar) {
	classifier = 'sources'
	from sourceSets.main.allSource
}


if (!hasProperty('mainClass')) {
    ext.mainClass = 'eu.mihosoft.vrl.v3d.Main'
}

mainClassName = mainClass

repositories {
    mavenCentral()
    jcenter()
	mavenLocal()
}

// javadoc is way too strict for my taste.
if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption("encoding", "UTF-8")
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}
//home/hephaestus/.m2/repository/net/jsdia/jsdi_lib/4.5.0-SNAPSHOT/jsdi_lib-4.5.0-SNAPSHOT.pom
//home/hephaestus/.m2/repository/net/jsdai/jsdai_lib/4.5.0-SNAPSHOT/jsdai_lib-4.5.0-SNAPSHOT.pom
//home/hephaestus/.m2/repository/net/jsdia/jsdai_lib/4.5.0-SNAPSHOT/jsdai_lib-4.5.0-SNAPSHOT.pom

task javadocJar(type: Jar, dependsOn: javadoc) {
    
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

dependencies {
    compile group: 'junit', name: 'junit', version: '4.0'
	compile 'commons-io:commons-io:2.4'
	compile group:'com.googlecode.json-simple', name:'json-simple', version:'1.1'
    
	compile 'com.google.code.gson:gson:2.5'
    //compile group: 'eu.mihosoft.ext.org.fxyz', name: 'extfxyz', version: '0.4'
    //compile group: 'eu.mihosoft.ext.org.fxyz', name: 'extfxyz', version: '0.4', classifier: 'sources'
    compile group: 'eu.mihosoft.vvecmath', name: 'vvecmath', version: '0.3.8'
    compile group: 'eu.mihosoft.vvecmath', name: 'vvecmath', version: '0.3.8', classifier: 'sources'
    compile group: 'java3d', name: 'vecmath', version: '1.3.1'

    compile 'org.slf4j:slf4j-simple:1.6.1'
    // https://mvnrepository.com/artifact/com.badlogicgames.gdx/gdx-tools
	//compile group: 'com.badlogicgames.gdx', name: 'gdx-tools', version: '0.9.9'
	
    // https://mvnrepository.com/artifact/org.apache.xmlgraphics/batik-svggen
	compile group: 'org.apache.xmlgraphics', name: 'batik-svggen', version: '1.7'
    
    compile fileTree (dir: 'libs', includes: ['*.jar'])
    //compile group: 'java3d', name: 'vecmath', version: '1.3.1' , classifier: "javadoc"
	//compile fileTree (dir: 'libs/jsdai', includes: ['*.jar'])
	//compile fileTree (dir: 'libs/jsdai', includes: ['*.zip'])
	
	
}

Date buildTimeAndDate = new Date()
ext {
    buildDate = new java.text.SimpleDateFormat('yyyy-MM-dd').format(buildTimeAndDate)
    buildTime = new java.text.SimpleDateFormat('HH:mm:ss.SSSZ').format(buildTimeAndDate)
}


group = "com.neuronrobotics"
archivesBaseName = props."app.name"
version = props."app.version"

/*
artifacts {
	archives javadocJar, sourcesJar, jar
}

signing {
	sign configurations.archives
}
uploadArchives {
	repositories {
	  mavenDeployer {
		beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
  
		repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
		  authentication(userName: ossrhUsername, password: ossrhPassword)
		}
  
		snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
		  authentication(userName: ossrhUsername, password: ossrhPassword)
		}
  
		pom.project {
		  name 'JCSG JavaCad'
		  packaging 'jar'
		  // optionally artifactId can be defined here
		  description 'A Java based CSG Cad library'
		  url 'http://neuronrobotics.com'
  
		  scm {
			connection 			'scm:git:https://github.com/NeuronRobotics/JCSG'
			developerConnection 'scm:git:git@github.com:NeuronRobotics/JCSG.git'
			url 'https://github.com/NeuronRoboticsG/JCSG'
		  }
  
		  licenses {
			license {
			  name 'The Apache License, Version 2.0'
			  url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
			}
		  }
  
		  developers {
			developer {
			  id 'madhephaestus'
			  name 'Kevin Harrington'
			  email 'kharrington@neuronrobotics.com'
			}
		  }
		}
	  }
	}
  }
  */
 